//
@PART[*]:HAS[@LRTFCONF[Avionics]]:FOR[zTestFlight]
{
	@LRTFCONF[Avionics]:HAS[~mannedDUMulti]
	{
		mannedDUMulti = 1.0
	}
	@LRTFCONF[Avionics]:HAS[~glitchMaxWorktime]
	{
		glitchMaxWorktime = 1.0
	}
	@LRTFCONF[Avionics]:HAS[~glitchMaxDeadtime]
	{
		glitchMaxDeadtime = 1.0
	}
}

//------------------------------------------------------------------
// Create the nodes.

@PART[*]:HAS[@LRTFCONF[Avionics]]:FOR[zTestFlight]
{
	@MODULE[LRTFDataRecorder]
	{
		%name = LRTFDataRecorder_Avionics
   	}
}

@PART[*]:HAS[@LRTFCONF[Avionics]:HAS[#avionicsSAS[?rue]]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_AvionicsSAS
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		@duFail *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		duRepair = 250
		@duRepair *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		failureTitle = SAS Failure
		severity = minor
		weight = 8
		failureType = software
	}
}
@PART[*]:HAS[@LRTFCONF[Avionics]:HAS[#avionicsAxis[?rue]]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_AvionicsAxis
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		@duFail *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		duRepair = 250
		@duRepair *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		failureTitle = Loss Of Axial Control
		severity = minor
		weight = 8
		failureType = software
	}
}
@PART[*]:HAS[@LRTFCONF[Avionics]:HAS[#avionicsClamp[?rue]]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_AvionicsClamp
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		@duFail *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		duRepair = 250
		@duRepair *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		failureTitle = Avionics Clammped
		severity = minor
		weight = 8
		failureType = software
	}
}
@PART[*]:HAS[@LRTFCONF[Avionics]:HAS[#avionicsDeadZone[?rue]]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_AvionicsDeadzone
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		@duFail *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		duRepair = 250
		@duRepair *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		failureTitle = Avionics Dead Zone
		severity = minor
		weight = 16
		failureType = software
	}
}

@PART[*]:HAS[@LRTFCONF[Avionics]:HAS[#avionicsGlitch[?rue]]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_AvionicsGlitch
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		@duFail *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		duRepair = 250
		@duRepair *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		failureTitle = Avionics Glitch
		severity = minor
		weight = 16
		failureType = software
		maxDeadtime = #$../LRTFCONF[Avionics]/glitchMaxDeadtime$
		maxWorkTime = #$../LRTFCONF[Avionics]/glitchMaxWorktime$
	}
}
@PART[*]:HAS[@LRTFCONF[Avionics]:HAS[#avionicsInvert[?rue]]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_AvionicsInvert
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		@duFail *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		duRepair = 250
		@duRepair *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		failureTitle = Inverted Avionics
		severity = minor
		weight = 16
		failureType = hardware
	}
}
@PART[*]:HAS[@LRTFCONF[Avionics]:HAS[#avionicsPartial[?rue]]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_AvionicsPartial
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		@duFail *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		duRepair = 250
		@duRepair *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		failureTitle = Partial Avionics Control
		severity = minor
		weight = 16
		failureType = hardware
	}
}
@PART[*]:HAS[@LRTFCONF[Avionics]:HAS[#avionicsThrustJam[?rue]]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_AvionicsThrustJam
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		@duFail *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		duRepair = 250
		@duRepair *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		failureTitle = Jammed Thruster
		severity = minor
		weight = 16
		failureType = hardware
	}
}
@PART[*]:HAS[@LRTFCONF[Avionics]:HAS[#avionicsTotal[?rue]]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_AvionicsTotal
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		@duFail *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		duRepair = 250
		@duRepair *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		failureTitle = Total Loss Of Avionics
		severity = major
		includeAxisInPAW = false
		weight = 2
		failureType = hardware
	}
}
@PART[*]:HAS[@LRTFCONF[Avionics]:HAS[#avionicsSAS[?rue]]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_AvionicsSAS
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		@duFail *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		duRepair = 250
		@duRepair *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		failureTitle = SAS Failure
		severity = Major
		weight = 2
		failureType = software
	}
}
@PART[*]:HAS[@LRTFCONF[Avionics]:HAS[#avionicsReactionWheel[?rue]]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_ReactionBroken
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		@duFail *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		duRepair = 250
		@duRepair *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		failureTitle = Broken Reaction Wheel
		severity = minor
		weight = 16
		failureType = hardware
	}
	MODULE
	{
		name = LRTFFailure_ReactionTorque
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		@duFail *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		duRepair = 250
		@duRepair *= #$../LRTFCONF[Avionics]/mannedDUMulti$
		failureTitle = Torque Alignment Errors
		severity = minor
		weight = 32
		failureType = software
	}
}
@PART[*]:HAS[@LRTFCONF[Avionics]:HAS[#avionicsComms[?rue]]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_CommPartial
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		duRepair = 250
		failureTitle = Reduced Comms
		severity = minor
		weight = 8	
		failureType = software
	}
	MODULE
	{
		name = LRTFFailure_CommFailure
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		duRepair = 250
		failureTitle = Transmitter Failure
		severity = major
		weight = 8	
		failureType = hardware
	}
}

@PART[*]:HAS[@LRTFCONF[Avionics]:HAS[#avionicsResources[?rue]]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_ResourceLeak
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		duRepair = 250
		failureTitle = Resource Leak
		severity = minor
		weight = 16
		initialAmount = 0
		perSecondAmount = 0.05
		resourceToLeak = Any
		includeResourceInPAW = false
		resourceBlacklist = Ablator,SolidFuel
		RESOURCETITLES
		{
			ElectricCharge = Short Circuit
			MonoPropellant = Monopropellant Leak
		}
		failureType = hardware
	}
	MODULE
	{
		name = LRTFFailure_ResourcePump
		configuration = #$../LRTFCONF[Avionics]/alias$
		duFail = 100
		duRepair = 250
		failureTitle = Resource Failure
		weight = 2
		severity = major
		resourceName = Any
		failureType = hardware
		drainResource = false
		includeResourceInPAW = false
		RESOURCETITLES
		{
			ElectricCharge = Battery Failure
			MonoPropellant = Presssurization Failure
		}
	}
}

//Cleanup
@PART[*]:HAS[@LRTFCONF[Avionics]]:AFTER[zTestFlight]
{
	-LRTFCONF[Avionics] {}
}