@PART[*]:HAS[@LRTFCONF[Parachute]]:FOR[zTestFlight]
{
	@LRTFCONF:HAS[~deployKinkV]
	{
		deployKinkV = 0.75
	}
	@LRTFCONF:HAS[~deployKinkW]
	{
		deployKinkW= 0.5
	}
	@LRTFCONF:HAS[~deployKinkH]
	{
		deployKinkH= 0.25
	}
}

//------------------------------------------------------------------
// Create the nodes.

@PART[*]:HAS[@LRTFCONF[Parachute]]:FOR[zTestFlight]
{
	@MODULE[LRTFDataRecorder]
	{
		%name = LRTFDataRecorder_Parachutes
	}
}

@PART[*]:HAS[@LRTFCONF[Parachute]]:FOR[zTestFlight]
{
	MODULE
	{
		name = LRTFFailure_ParachutePartial
		configuration = #$../LRTFCONF[Parachute]/alias$
		duFail = 250
		duRepair = 250
		failureTitle = Reefing Failure
		severity = major
		weight = 32
		failureType = hardware
	}	
	MODULE
	{
		name = LRTFFailure_ParachuteFail
		configuration = #$../LRTFCONF[Parachute]/alias$
		duFail = 250
		duRepair = 250
		failureTitle = Parachute Failure
		severity = major
		weight = 4
		failureType = hardware
	}
	MODULE
	{
		name = LRTFFailure_ParachuteDeploy
		configuration = #$../LRTFCONF[Parachute]/alias$
		duFail = 600
		failureTitle = Failed to deploy
		severity = major
		failureType = hardware
		deploymentChanceCurve
		{
			// Create first key
			key10 = 0
			key11 = #$../../LRTFCONF[Parachute]/parachuteDeploymentStart$

			// Calculate kink time
			key20 = #$../../LRTFCONF[Parachute]/deployKinkH$
			@key20 *= 5000
			@key20 += 1000

			// Calculate kink value
			key21 = #$../../LRTFCONF[Parachute]/parachuteDeploymentEnd$
			@key21 -= #$../../LRTFCONF[Parachute]/parachuteDeploymentStart$
			@key21 *= #$../../LRTFCONF[Parachute]/deployKinkV$
			@key21 += #$../../LRTFCONF[Parachute]/parachuteDeploymentStart$

			// Calculate kink tangent
			// tangent = Y/X
			key22 = #$../../LRTFCONF[Parachute]/parachuteDeploymentEnd$
			@key22 -= #$../../LRTFCONF[Parachute]/parachuteDeploymentStart$
			@key22 *= 0.0001
			@key22 *= #$../../LRTFCONF[Parachute]/deployKinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../LRTFCONF[Parachute]/parachuteDeploymentEnd$
			@key221 -= #$key21$
			key222 = #$../../LRTFCONF/maxData$
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../LRTFCONF[Parachute]/deployKinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$

			// Create end key
			key30 = #$../../LRTFCONF/maxData$
			key31 = #$../../LRTFCONF[Parachute]/parachuteDeploymentEnd$
			key32 = 0 // flat intangent

			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$

			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key221 = DEL
			!key222 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
		}   
	}
}

//Cleanup
@PART[*]:HAS[@LRTFCONF[Parachute]]:AFTER[zTestFlight]
{
	-LRTFCONF[Parachute] {}
}